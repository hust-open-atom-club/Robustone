name: Robustone CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # 代码质量检查
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Rustfmt Check
      run: cargo fmt --all -- --check

    - name: Clippy Check
      run: cargo clippy --workspace --all-features -- -D warnings

    - name: Security Audit
      uses: actions-rs/audit-check@v1
      continue-on-error: true

  # 单元测试
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: code-quality
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust ${{ matrix.rust }}
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Run unit tests
      run: cargo test --workspace --all-features

  # 集成测试和兼容性测试
  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
          third_party
        key: ${{ runner.os }}-integration-${{ hashFiles('**/Cargo.lock') }}

    - name: Build Capstone
      run: |
        if [ ! -d "third_party/capstone" ]; then
          git clone --depth 1 https://github.com/capstone-engine/capstone.git third_party/capstone
        fi
        bash test/scripts/build_cstool.sh third_party/capstone

    - name: Run parity tests
      run: |
        cd test
        python3 run_tests.py --all --limit 50

    - name: Validate test configurations
      run: |
        cd test
        python3 scripts/validate_configs.py

  # 多平台构建测试
  build-test:
    name: Build Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: code-quality
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-build-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Build for target
      run: cargo build --workspace --target ${{ matrix.target }}

    - name: Run tests for target
      run: cargo test --workspace --target ${{ matrix.target }}
